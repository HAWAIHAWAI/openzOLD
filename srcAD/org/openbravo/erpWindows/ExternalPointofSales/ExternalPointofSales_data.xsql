<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="ExternalPointofSalesData" package="org.openbravo.erpWindows.ExternalPointofSales">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_ExternalPOS.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_ExternalPOS.CreatedBy) as CreatedByR, 
        to_char(C_ExternalPOS.Updated, ?) as updated, 
        to_char(C_ExternalPOS.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_ExternalPOS.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_ExternalPOS.UpdatedBy) as UpdatedByR,
        C_ExternalPOS.C_Externalpos_ID, 
C_ExternalPOS.AD_Client_ID, 
(CASE WHEN C_ExternalPOS.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_ExternalPOS.AD_Org_ID, 
(CASE WHEN C_ExternalPOS.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
COALESCE(C_ExternalPOS.IsActive, 'N') AS IsActive, 
C_ExternalPOS.Value, 
C_ExternalPOS.Name, 
C_ExternalPOS.Description, 
C_ExternalPOS.M_Warehouse_ID, 
(CASE WHEN C_ExternalPOS.M_Warehouse_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS M_Warehouse_IDR, 
C_ExternalPOS.C_DocType_ID, 
(CASE WHEN C_ExternalPOS.C_DocType_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL4.Name IS NULL THEN TO_CHAR(table4.Name) ELSE TO_CHAR(tableTRL4.Name) END)), ''))),'') ) END) AS C_DocType_IDR, 
C_ExternalPOS.C_BPartner_ID, 
(CASE WHEN C_ExternalPOS.C_BPartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Name), ''))),'') ) END) AS C_BPartner_IDR, 
C_ExternalPOS.M_PriceList_ID, 
(CASE WHEN C_ExternalPOS.M_PriceList_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Name), ''))),'') ) END) AS M_PriceList_IDR, 
C_ExternalPOS.SalesRep_ID, 
(CASE WHEN C_ExternalPOS.SalesRep_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Name), ''))),'') ) END) AS SalesRep_IDR, 
C_ExternalPOS.M_Shipper_ID, 
(CASE WHEN C_ExternalPOS.M_Shipper_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Name), ''))),'') ) END) AS M_Shipper_IDR, 
C_ExternalPOS.Include_Product, 
(CASE WHEN C_ExternalPOS.Include_Product IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS Include_ProductR, 
C_ExternalPOS.Include_Product_Category, 
(CASE WHEN C_ExternalPOS.Include_Product_Category IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list2.name),'') ) END) AS Include_Product_CategoryR, 
 
        ? AS LANGUAGE 
        FROM C_ExternalPOS left join (select AD_Client_ID, Name from AD_Client) table1 on (C_ExternalPOS.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_ExternalPOS.AD_Org_ID = table2.AD_Org_ID) left join (select M_Warehouse_ID, Name from M_Warehouse) table3 on (C_ExternalPOS.M_Warehouse_ID = table3.M_Warehouse_ID) left join (select C_DocType_ID, Name from C_DocType) table4 on (C_ExternalPOS.C_DocType_ID =  table4.C_DocType_ID) left join (select C_DocType_ID,AD_Language, Name from C_DocType_TRL) tableTRL4 on (table4.C_DocType_ID = tableTRL4.C_DocType_ID and tableTRL4.AD_Language = ?)  left join (select C_BPartner_ID, Name from C_BPartner) table5 on (C_ExternalPOS.C_BPartner_ID = table5.C_BPartner_ID) left join (select M_PriceList_ID, Name from M_PriceList) table6 on (C_ExternalPOS.M_PriceList_ID = table6.M_PriceList_ID) left join (select AD_User_ID, Name from AD_User) table7 on (C_ExternalPOS.SalesRep_ID =  table7.AD_User_ID) left join (select M_Shipper_ID, Name from M_Shipper) table8 on (C_ExternalPOS.M_Shipper_ID = table8.M_Shipper_ID) left join ad_ref_list_v list1 on (C_ExternalPOS.Include_Product = list1.value and list1.ad_reference_id = '800029' and list1.ad_language = ?)  left join ad_ref_list_v list2 on (C_ExternalPOS.Include_Product_Category = list2.value and list2.ad_reference_id = '800029' and list2.ad_language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND C_ExternalPOS.C_Externalpos_ID = ? 
        AND C_ExternalPOS.AD_Client_ID IN ('1') 
           AND C_ExternalPOS.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_ExternalPOS.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_ExternalPOS.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="adOrgId"></Parameter><Parameter name="mPricelistId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="includeProductCategory"></Parameter><Parameter name="mWarehouseId"></Parameter><Parameter name="name"></Parameter><Parameter name="mShipperId"></Parameter><Parameter name="cExternalposId"></Parameter><Parameter name="cDoctypeId"></Parameter><Parameter name="includeProduct"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="value"></Parameter><Parameter name="description"></Parameter><Parameter name="salesrepId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef803053_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef803061_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as C_BPartner_ID FROM C_BPartner table1 WHERE table1.isActive='Y' AND table1.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_BPartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef803055_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_ExternalPOS
        SET C_Externalpos_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , IsActive = (?) , Value = (?) , Name = (?) , Description = (?) , M_Warehouse_ID = (?) , C_DocType_ID = (?) , C_BPartner_ID = (?) , M_PriceList_ID = (?) , SalesRep_ID = (?) , M_Shipper_ID = (?) , Include_Product = (?) , Include_Product_Category = (?) , updated = now(), updatedby = ? 
        WHERE C_ExternalPOS.C_Externalpos_ID = ? 
        
        AND C_ExternalPOS.AD_Client_ID IN ('1') 
        AND C_ExternalPOS.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cExternalposId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="value"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> <Parameter name="mWarehouseId"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="salesrepId"></Parameter> <Parameter name="mShipperId"></Parameter> <Parameter name="includeProduct"></Parameter> <Parameter name="includeProductCategory"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cExternalposId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="C_ExternalPOS.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_ExternalPOS.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_ExternalPOS 
        (C_Externalpos_ID, AD_Client_ID, AD_Org_ID, IsActive, Value, Name, Description, M_Warehouse_ID, C_DocType_ID, C_BPartner_ID, M_PriceList_ID, SalesRep_ID, M_Shipper_ID, Include_Product, Include_Product_Category, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cExternalposId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="value"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> <Parameter name="mWarehouseId"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="salesrepId"></Parameter> <Parameter name="mShipperId"></Parameter> <Parameter name="includeProduct"></Parameter> <Parameter name="includeProductCategory"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_ExternalPOS
        WHERE C_ExternalPOS.C_Externalpos_ID = ? 
        
        AND C_ExternalPOS.AD_Client_ID IN ('1') 
        AND C_ExternalPOS.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="C_ExternalPOS.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_ExternalPOS.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_ExternalPOS
        WHERE C_ExternalPOS.C_Externalpos_ID = ? 
        
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_ExternalPOS
         WHERE C_ExternalPOS.C_Externalpos_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_ExternalPOS
         WHERE C_ExternalPOS.C_Externalpos_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>